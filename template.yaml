AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 3
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Parameters:
  AppStage:
    Type: String
    Default: api

Resources:
  UsersApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref AppStage
  QueryUsersFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: query-users/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            Path: /users
            Method: get
            RestApiId: !Ref UsersApi
        GetSingleUser:
          Type: Api
          Properties:
            Path: /users/{id}
            Method: get
            RestApiId: !Ref UsersApi
  PersistUserFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: persist-user/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Policies: AmazonDynamoDBFullAccess
      Environment:
        Variables:
          USERS_TABLE: !Ref UsersTable
      Events:
        PersistUser:
          Type: Api
          Properties:
            Path: /users
            Method: post
            RestApiId: !Ref UsersApi
  UsersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  UsersHttpApi:
    Value: !Sub "https://${UsersApi}.execute-api.${AWS::Region}.amazonaws.com/${AppStage}/users/"
  QueryUsersFunction:
    Value: !GetAtt QueryUsersFunction.Arn
  PersistUserFunction:
    Value: !GetAtt PersistUserFunction.Arn
  UsersTable:
    Value: !GetAtt UsersTable.Arn
